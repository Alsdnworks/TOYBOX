[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jointpointlinemerge"
version = "0.1.0"
description = "A tool for merging lines at joint points using geospatial operations"
authors = [{name = "Alsdnworks"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13"
keywords = ["geospatial", "gis", "line-merge", "shapely", "geopandas"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
]

dependencies = [
    "pandas>=1.3.0",
    "geopandas>=0.10.0", 
    "shapely>=1.8.0",
    "pyproj>=3.0.0",
    "matplotlib>=3.5.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
]

[project.scripts]
jointpoint-linemerge = "jointpointLinemerge:main"

[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-cov>=2.0", 
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jointpointLinemerge"]

[tool.pytest.ini_options]
testpaths = ["tests", "."]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=jointpointLinemerge --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true